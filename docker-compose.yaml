services:
  app:
    build: .
    ports:
      - '${API_PORT:-8080}:${API_PORT:-8080}'
    depends_on:
      - db
    environment:
      - DB_DRIVER=${DB_DRIVER:-mysql}
      - DB_HOST=${DB_HOST:-db}
      - DB_USERNAME=${DB_USERNAME:-mysql}
      - DB_PASSWORD=${DB_PASSWORD:-mypass}
      - DB_DATABASE_NAME=${DB_DATABASE_NAME:-mydb}
      - DB_PORT=${DB_PORT:-3306}
      - CRYPTO_SECRET_KEY=${CRYPTO_SECRET_KEY:-4876he526d9148b7ac40bd623b240753}
      - API_PORT=${API_PORT:-8080}
      - LOGLEVEL=${LOGLEVEL:-debug}
    restart: always
    networks:
      - my_app_network
      - my_db_network

  db:
    image: mysql:latest
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-StrongRootPassword123!}
      - MYSQL_USER=${DB_USERNAME:-mysql}
      - MYSQL_PASSWORD=${DB_PASSWORD:-mypass}
      - MYSQL_DATABASE=${DB_DATABASE_NAME:-mydb}
    volumes:
      - ./src/v1/infrastructure/persistence/database/db_volume:/var/lib/mysql
      - ./src/v1/infrastructure/persistence/database/db_scripts/:/docker-entrypoint-initdb.d/
    ports:
      - '${DB_PORT:-3306}:${DB_PORT:-3306}'
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10
    networks:
      - my_db_network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ['--config=/etc/otel-config.yaml']
    volumes:
      - ./src/v1/infrastructure/observability/otel-collector-config.yaml:/etc/otel-config.yaml
    ports:
      - '4317:4317' # OTLP gRPC (host:container)
      - '4318:4318' # OTLP HTTP (host:container)
      - '13133:13133' # health_check
      - '8889:8889' # Prometheus metrics
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:13133/livez']
      interval: 30s
      timeout: 10s
      retries: 3
    # depends_on:
    #   - loki
    networks:
      - my_app_network

  loki:
    image: grafana/loki:latest
    ports:
      - '3100:3100' # Loki HTTP API
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./src/v1/infrastructure/observability/loki-config.yaml:/etc/loki/local-config.yaml
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--spider', 'http://localhost:3100/ready']
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s
    networks:
      - my_observability_network

  # Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./src/v1/infrastructure/observability/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    networks:
      - my_observability_network

  # grafana:
  #   image: grafana/grafana:latest
  #   user: '472:472'
  #   ports:
  #     - '3000:3000' # Grafana UI
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_PATHS_DATA=/var/lib/grafana
  #   volumes:
  #     - ./src/v1/infrastructure/observability/grafana_data_volume:/var/lib/grafana
  #   command:
  #     - sh
  #     - -c
  #     - |
  #       chown -R 472:472 /var/lib/grafana
  #       exec /run.sh
  #   depends_on:
  #     - loki
  #     - otel-collector # Ensure collector is up so Grafana can add it as a data source
  #   networks:
  #     - my_app_network

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
      - ./src/v1/infrastructure/observability/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
      - GF_INSTALL_PLUGINS=grafana-exploretraces-app ## plugin...
    ports:
      - '3000:3000'
    networks:
      - my_observability_network

  tempo:
    image: grafana/tempo:latest
    command: ['-config.file=/etc/tempo.yaml']
    ports:
      - '3200' # Tempo HTTP API
      - '4317' # OTLP gRPC (internal only)
    volumes:
      - ./src/v1/infrastructure/observability/tempo.yaml:/etc/tempo.yaml
      - tempo_data:/var/tempo
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3200/status']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_observability_network

  # init:
  #   image: &tempoImage grafana/tempo:latest
  #   user: root
  #   entrypoint:
  #     - 'chown'
  #     - '10001:10001'
  #     - '/var/tempo'
  #   volumes:
  #     - ./tempo-data:/var/tempo

  # tempo:
  #   image: *tempoImage
  #   command: ['-config.file=/etc/tempo.yaml']
  #   volumes:
  #     - ./src/v1/infrastructure/observability/tempo.yaml:/etc/tempo.yaml
  #     - ./tempo-data:/var/tempo
  #   ports:
  #     - '3200' # tempo
  #     - '4317' # otlp grpc
  #   depends_on:
  #     - init

networks:
  my_app_network:
    driver: bridge
  my_db_network:
    driver: bridge
  my_observability_network:
    driver: bridge

volumes:
  grafana_data:
  tempo_data:
